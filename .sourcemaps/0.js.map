{"version":3,"sources":["../../src/pages/auth/email-login/email-login.module.ts","../../src/components/nav/nav-header-text/nav-header-text.module.ts","../../src/components/nav/nav-header-text/nav-header-text.ts","../../src/pages/auth/email-login/email-login.ts","../../src/services/alert-service/alert-service.ts"],"names":[],"mappings":"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","file":"0.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { EmailLoginPage } from './email-login';\nimport {NavHeaderTextComponentModule} from \"../../../components/nav/nav-header-text/nav-header-text.module\";\n\n@NgModule({\n  declarations: [\n    EmailLoginPage,\n  ],\n  imports: [\n    NavHeaderTextComponentModule,\n    IonicPageModule.forChild(EmailLoginPage),\n  ],\n  exports: [\n    EmailLoginPage\n  ]\n})\nexport class EmailLoginPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/auth/email-login/email-login.module.ts","import { NgModule } from '@angular/core';\nimport { IonicModule } from 'ionic-angular';\nimport { NavHeaderTextComponent } from './nav-header-text';\n\n@NgModule({\n  declarations: [\n    NavHeaderTextComponent,\n  ],\n  imports: [\n    IonicModule,\n  ],\n  exports: [\n    NavHeaderTextComponent\n  ]\n})\nexport class NavHeaderTextComponentModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/nav/nav-header-text/nav-header-text.module.ts","import {Component, Input} from '@angular/core';\nimport {NavController} from \"ionic-angular\";\n\n/**\n * Generated class for the NavHeaderTextComponent component.\n *\n * See https://angular.io/docs/ts/latest/api/core/index/ComponentMetadata-class.html\n * for more info on Angular Components.\n */\n@Component({\n  selector: 'nav-header-text',\n  templateUrl: 'nav-header-text.html'\n})\nexport class NavHeaderTextComponent {\n\n  @Input() title: string;\n  @Input() isTransparent: boolean;\n\n  constructor(public nav: NavController) {}\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/nav/nav-header-text/nav-header-text.ts","import { Component } from '@angular/core';\nimport {IonicPage, NavController, NavParams, ToastController} from 'ionic-angular';\nimport { Storage } from '@ionic/storage';\n\nimport {AlertService} from \"../../../services/alert-service/alert-service\";\nimport {UserData} from \"../../../app/core/user-data\";\nimport {AuthServiceProvider} from \"../../../services/auth-service\";\n\n/**\n * Generated class for the EmailLoginPage page.\n *\n * See http://ionicframework.com/docs/components/#navigation for more info\n * on Ionic pages and navigation.\n */\n@IonicPage()\n@Component({\n  selector: 'page-email-login',\n  templateUrl: 'email-login.html',\n})\nexport class EmailLoginPage {\n  credentials: any = { };\n\n  constructor(public authService: AuthServiceProvider, private alertService: AlertService, public navCtrl: NavController, public navParams: NavParams\n  ,private toastCtrl: ToastController ,private storage: Storage,private userData: UserData) {\n  }\n\n  doLogin() {\n    this.authService.login(this.credentials)\n      .subscribe(\n        data => {\n          console.log(data);\n          if (data.authenticated == true) {\n            this.presentToast(\"logged In\", \"toast-success\");\n\n            console.log(data);\n            this.storage.set('last_login:email', this.credentials.email);\n            this.storage.set('jwt_token', data.token);\n\n            this.userData.isAuthenticated = true;\n\n            this.navCtrl.setRoot('MainPage');\n          } else if (data.message != null) {\n            this.alertService.presentError(\"Login Error\", data.message);\n          } else if (data.errorMessage != null) {\n            if (data.errorMessage.indexOf(\"Bad credentials\") >= 0)\n              this.alertService.presentError(\"Login Error\", \"Invalid username or password\");\n            else {\n              this.alertService.presentError(\"Login Error\", data.errorMessage)\n            }\n          }\n        },\n        error => {\n          console.log(error);\n          this.presentToast(\"Login Failed\", \"toast-error\");\n        }\n      );\n  }\n\n  presentToast(msg, cssClass): Promise<any> {\n    let toast = this.toastCtrl.create({\n      message: msg,\n      duration: 3000,\n      position: 'bottom',\n      dismissOnPageChange: true,\n      cssClass: cssClass\n    });\n\n    return toast.present();\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad EmailLoginPage');\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/auth/email-login/email-login.ts","import { Injectable } from '@angular/core';\nimport { AlertController } from \"ionic-angular\";\n\n/*\n  Generated class for the AlertServiceProvider provider.\n\n  See https://angular.io/docs/ts/latest/guide/dependency-injection.html\n  for more info on providers and Angular DI.\n*/\n@Injectable()\nexport class AlertService {\n\n  constructor(private alertCtrl: AlertController) {\n\n  }\n\n  presentError(title, message){\n    let alert = this.alertCtrl.create({\n      title: title,\n      message: message,\n      buttons: ['OK']\n    });\n\n    alert.present();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/services/alert-service/alert-service.ts"],"sourceRoot":""}