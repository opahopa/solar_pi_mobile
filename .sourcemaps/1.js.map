{"version":3,"sources":["../../src/pages/stats/stats.module.ts","../../src/components/line-chart/chart-type.ts","../../src/pages/stats/stats.ts","../../src/components/line-chart/line-chart.module.ts","../../src/components/line-chart/line-chart.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACO;AACZ;AACmD;AAWvF,IAAa,eAAe;IAA5B;IAA8B,CAAC;IAAD,sBAAC;AAAD,CAAC;AAAlB,eAAe;IAT3B,+DAAQ,CAAC;QACR,YAAY,EAAE;YACZ,yDAAS;SACV;QACD,OAAO,EAAE;YACP,sEAAe,CAAC,QAAQ,CAAC,yDAAS,CAAC;YACnC,0GAAwB;SACzB;KACF,CAAC;GACW,eAAe,CAAG;AAAH;;;;;;;;;;ACd5B,IAAY,SAIX;AAJD,WAAY,SAAS;IACnB,6CAAM;IACN,+CAAO;IACP,6CAAM;AACR,CAAC,EAJW,SAAS,KAAT,SAAS,QAIpB;;;;;;;;;;;;;;;;;;;;;;;;ACJyC;AACe;AACQ;AACL;AACF;AAG1D;;;;;GAKG;AAOH,IAAa,SAAS;IAOpB,mBAAmB,OAAsB,EAAU,SAA4B,EAAU,aAA4B;QAAlG,YAAO,GAAP,OAAO,CAAe;QAAU,cAAS,GAAT,SAAS,CAAmB;QAAU,kBAAa,GAAb,aAAa,CAAe;QANrH,sBAAiB,GAAW,QAAQ,CAAC;QACrC,cAAS,GAAa,oFAAS,CAAC,MAAM,CAAC;QAMrC,IAAI,CAAC,aAAa,GAAI,IAAI,CAAC,SAAS,CAAC,kBAAkB,EAAE,CAAC;IAC5D,CAAC;IAED,uCAAmB,GAAnB,UAAoB,KAAK;QAAzB,iBA2BC;QA1BC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC;QACxB,MAAM,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;YACpB,KAAK,QAAQ,EAAE,CAAC;gBACd,IAAI,CAAC,SAAS,GAAG,oFAAS,CAAC,MAAM,CAAC;gBAClC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,kBAAkB,EAAE,CAAC;gBACzD,KAAK,CAAC;YACR,CAAC;YACD,KAAK,SAAS,EAAE,CAAC;gBACf,IAAI,CAAC,SAAS,GAAG,oFAAS,CAAC,OAAO,CAAC;gBACnC,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC,SAAS,CAAC,UAAC,IAAI;oBACjD,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC,GAAG,CAAC,UAAS,CAAC,IAAG,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,EAAC,CAAC,CAAC;oBAE9D,IAAI,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,QAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,EAAf,CAAe,CAAC,CAAC;oBACtD,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;oBAExB,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,aAAa,CAAC,CAAC;gBAClC,CAAC,CAAC,CAAC;gBACH,6DAA6D;gBAC7D,KAAK,CAAC;YACR,CAAC;YACD,KAAK,QAAQ,EAAE,CAAC;gBACd,IAAI,CAAC,SAAS,GAAG,oFAAS,CAAC,MAAM,CAAC;gBAClC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,SAAS,CAAC,kBAAkB,EAAE,CAAC;gBACzD,KAAK,CAAC;YACR,CAAC;QACH,CAAC;IACH,CAAC;IAED,yCAAqB,GAArB,UAAsB,IAAwB;QAC5C,IAAI,WAA8B,CAAC;QACnC,IAAI,MAAY,CAAC;QACjB,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC;YACnB,MAAM,CAAC,IAAI,EAEV;QACL,CAAC;IACH,CAAC;IAED,2BAAO,GAAP;QAAA,iBAKC;QAJC,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC,SAAS,CAAC,UAAC,IAAI;YACjD,KAAI,CAAC,aAAa,GAAG,IAAI,CAAC;YAC1B,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,aAAa,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,kCAAc,GAAd;QACE,OAAO,CAAC,GAAG,CAAC,0BAA0B,CAAC,CAAC;IAC1C,CAAC;IAEH,gBAAC;AAAD,CAAC;AA7DY,SAAS;IAJrB,gEAAS,CAAC;QACT,QAAQ,EAAE,YAAY;OACG;KAC1B,CAAC;cAQqH;AAsDtH;SA7DY,SAAS,e;;;;;;;;;;;;;;;;;;;;ACnBmB;AACG;AACM;AACR;AAc1C,IAAa,wBAAwB;IAArC;IAAuC,CAAC;IAAD,+BAAC;AAAD,CAAC;AAA3B,wBAAwB;IAZpC,+DAAQ,CAAC;QACR,YAAY,EAAE;YACZ,uEAAkB;SACnB;QACD,OAAO,EAAE;YACP,wDAAY;YACZ,kEAAW;SACZ;QACD,OAAO,EAAE;YACP,uEAAkB;SACnB;KACF,CAAC;GACW,wBAAwB,CAAG;AAAH;;;;;;;;;;;;;;;;;;;;;ACjBU;AACR;AAEvC;;;;;GAKG;AAKH,IAAa,kBAAkB;IA6D7B;QArDO,oBAAe,GAAc,EAAE,CAAC;QAChC,qBAAgB,GAAO;YAC5B,UAAU,EAAE,IAAI;SACjB,CAAC;QACK,oBAAe,GAAc;YAClC;gBACE,eAAe,EAAE,yBAAyB;gBAC1C,WAAW,EAAE,mBAAmB;gBAChC,oBAAoB,EAAE,qBAAqB;gBAC3C,gBAAgB,EAAE,MAAM;gBACxB,yBAAyB,EAAE,MAAM;gBACjC,qBAAqB,EAAE,uBAAuB;aAC/C;YACD;gBACE,eAAe,EAAE,oBAAoB;gBACrC,WAAW,EAAE,kBAAkB;gBAC/B,oBAAoB,EAAE,kBAAkB;gBACxC,gBAAgB,EAAE,MAAM;gBACxB,yBAAyB,EAAE,MAAM;gBACjC,qBAAqB,EAAE,kBAAkB;aAC1C;YACD;gBACE,eAAe,EAAE,yBAAyB;gBAC1C,WAAW,EAAE,mBAAmB;gBAChC,oBAAoB,EAAE,qBAAqB;gBAC3C,gBAAgB,EAAE,MAAM;gBACxB,yBAAyB,EAAE,MAAM;gBACjC,qBAAqB,EAAE,uBAAuB;aAC/C;SACF,CAAC;QACK,oBAAe,GAAW,IAAI,CAAC;QAC/B,kBAAa,GAAU,MAAM,CAAC;QAuBnC,OAAO,CAAC,GAAG,CAAC,sCAAsC,CAAC,CAAC;IACtD,CAAC;IAtBM,sCAAS,GAAhB;QACE,IAAI,cAAc,GAAc,IAAI,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;QACrE,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YACnD,cAAc,CAAC,CAAC,CAAC,GAAG,EAAC,IAAI,EAAE,IAAI,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,KAAK,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,KAAK,EAAC,CAAC;YAC7G,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBAC3D,cAAc,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;YACpE,CAAC;QACH,CAAC;QACD,IAAI,CAAC,aAAa,GAAG,cAAc,CAAC;IACtC,CAAC;IAED,SAAS;IACF,yCAAY,GAAnB,UAAoB,CAAK;QACvB,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACjB,CAAC;IAEM,yCAAY,GAAnB,UAAoB,CAAK;QACvB,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACjB,CAAC;IAMD,qCAAQ,GAAR;QACE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,QAAC,GAAG,CAAC,EAAL,CAAK,EAAE,CAAC,CAAC,CAAC,CAAC;QAC/E,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,GAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAIpE,MAAM,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;YACvB,KAAK,8DAAS,CAAC,MAAM;gBACnB,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;gBAChB,IAAI,CAAC,eAAe,GAAG,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM;oBACpE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;oBACpF,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;gBACnF,KAAK,CAAC;YACR,KAAK,8DAAS,CAAC,OAAO;gBACpB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;gBAClB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,GAAC,IAAI,CAAC;gBAC7B,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,GAAC,IAAI,CAAC;gBACzB,IAAI,CAAC,eAAe,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;oBAClD,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;oBACzF,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;gBACpD,KAAK,CAAC;YACR,KAAK,8DAAS,CAAC,MAAM,EAAC,CAAC;gBACrB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;gBAClB,IAAI,CAAC,eAAe,GAAG,CAAC,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM;oBAC5E,MAAM,EAAE,QAAQ,EAAE,WAAW,EAAE,SAAS,EAAE,WAAW,EAAE,UAAU,CAAC,CAAC;gBACrE,KAAK,CAAC;YACR,CAAC;QAEH,CAAC;IACH,CAAC;IACH,yBAAC;AAAD,CAAC;AA9FU;IAAR,4DAAK,EAAE;;yDAAmB;AAClB;IAAR,4DAAK,EAAE;;qDAAsB;AAFnB,kBAAkB;IAJ9B,gEAAS,CAAC;QACT,QAAQ,EAAE,YAAY;OACQ;KAC/B,CAAC;;AAgGD;SA/FY,kBAAkB,W","file":"1.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { StatsPage } from './stats';\nimport {LineChartComponentModule} from \"../../components/line-chart/line-chart.module\";\n\n@NgModule({\n  declarations: [\n    StatsPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(StatsPage),\n    LineChartComponentModule\n  ],\n})\nexport class StatsPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/stats/stats.module.ts","export enum ChartType {\n  HOURLY,\n  MONTHLY,\n  YEARLY\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/line-chart/chart-type.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport {ChartType} from \"../../components/line-chart/chart-type\";\nimport {DummyDataProvider} from \"../../providers/dummydata\";\nimport {StatsProvider} from \"../../providers/stats/stats\";\nimport {ConsumptionStats} from \"../../models/consumption-stats\";\n\n/**\n * Generated class for the StatsPage page.\n *\n * See http://ionicframework.com/docs/components/#navigation for more info\n * on Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-stats',\n  templateUrl: 'stats.html',\n})\nexport class StatsPage {\n  dataPeriodSegment: string = 'hourly';\n  chartType:ChartType = ChartType.HOURLY;\n\n  public lineChartData:Array<any>;\n  public tempChartData:Array<ConsumptionStats>;\n\n  constructor(public navCtrl: NavController, private dummyData: DummyDataProvider, private statsProvider: StatsProvider) {\n    this.lineChartData =  this.dummyData.getHourlyChartData();\n  }\n\n  statsSegmentChanged(event) {\n    console.log(event.value)\n    switch (event.value) {\n      case 'hourly': {\n        this.chartType = ChartType.HOURLY;\n        this.lineChartData = this.dummyData.getHourlyChartData();\n        break;\n      }\n      case 'monthly': {\n        this.chartType = ChartType.MONTHLY;\n        this.statsProvider.getMonthlyData().subscribe((data)=>{\n          this.lineChartData = data.map(function(a) {return a.energy;});\n\n          let testSorted = data.sort((a, b) => a.time - b.time);\n          console.log(testSorted);\n\n          console.log(this.lineChartData);\n        });\n        // this.lineChartData = this.dummyData.getMonthlyChartData();\n        break;\n      }\n      case 'yearly': {\n        this.chartType = ChartType.YEARLY;\n        this.lineChartData = this.dummyData.getYearlyChartData();\n        break;\n      }\n    }\n  }\n\n  convertDialyToMonthly(data: ConsumptionStats[]) {\n    let monthlyData:ConsumptionStats[];\n    let months:any[];\n    for (let day in data) {\n        months.push(\n\n        )\n    }\n  }\n\n  testApi(){\n    this.statsProvider.getMonthlyData().subscribe((data)=>{\n      this.tempChartData = data;\n      console.log(this.tempChartData);\n    });\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad StatsPage');\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/stats/stats.ts","import { NgModule } from '@angular/core';\nimport { IonicModule } from 'ionic-angular';\nimport { LineChartComponent } from \"./line-chart\";\nimport { ChartsModule } from 'ng2-charts';\n\n@NgModule({\n  declarations: [\n    LineChartComponent,\n  ],\n  imports: [\n    ChartsModule,\n    IonicModule,\n  ],\n  exports: [\n    LineChartComponent\n  ]\n})\nexport class LineChartComponentModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/line-chart/line-chart.module.ts","import {Component, Input} from '@angular/core';\nimport {ChartType} from \"./chart-type\";\n\n/**\n * Generated class for the HourlyChartComponent component.\n *\n * See https://angular.io/docs/ts/latest/api/core/index/ComponentMetadata-class.html\n * for more info on Angular Components.\n */\n@Component({\n  selector: 'line-chart',\n  templateUrl: 'line-chart.html'\n})\nexport class LineChartComponent {\n  @Input() lineChartData:any;\n  @Input() chartType: ChartType;\n\n  total:number;\n  avg:number;\n  unit:string;\n\n  public lineChartLabels:Array<any> = [];\n  public lineChartOptions:any = {\n    responsive: true\n  };\n  public lineChartColors:Array<any> = [\n    { // grey\n      backgroundColor: 'rgba(237, 172, 21, 0.2)',\n      borderColor: 'rgb(237, 172, 21)',\n      pointBackgroundColor: 'rgba(148,159,177,1)',\n      pointBorderColor: '#fff',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: 'rgba(148,159,177,0.8)'\n    },\n    { // dark grey\n      backgroundColor: 'rgba(77,83,96,0.2)',\n      borderColor: 'rgba(77,83,96,1)',\n      pointBackgroundColor: 'rgba(77,83,96,1)',\n      pointBorderColor: '#fff',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: 'rgba(77,83,96,1)'\n    },\n    { // grey\n      backgroundColor: 'rgba(237, 172, 21, 0.2)',\n      borderColor: 'rgb(237, 172, 21)',\n      pointBackgroundColor: 'rgba(148,159,177,1)',\n      pointBorderColor: '#fff',\n      pointHoverBackgroundColor: '#fff',\n      pointHoverBorderColor: 'rgba(148,159,177,0.8)'\n    }\n  ];\n  public lineChartLegend:boolean = true;\n  public lineChartType:string = 'line';\n\n  public randomize():void {\n    let _lineChartData:Array<any> = new Array(this.lineChartData.length);\n    for (let i = 0; i < this.lineChartData.length; i++) {\n      _lineChartData[i] = {data: new Array(this.lineChartData[i].data.length), label: this.lineChartData[i].label};\n      for (let j = 0; j < this.lineChartData[i].data.length; j++) {\n        _lineChartData[i].data[j] = Math.floor((Math.random() * 100) + 1);\n      }\n    }\n    this.lineChartData = _lineChartData;\n  }\n\n  // events\n  public chartClicked(e:any):void {\n    console.log(e);\n  }\n\n  public chartHovered(e:any):void {\n    console.log(e);\n  }\n\n  constructor() {\n    console.log('Hello HourlyChartComponent Component');\n  }\n\n  ngOnInit() {\n    this.total = Math.round(this.lineChartData[0].data.reduce((a, b) => a + b, 0));\n    this.avg = Math.round(this.total/this.lineChartData[0].data.length);\n\n\n\n    switch (this.chartType) {\n      case ChartType.HOURLY:\n        this.unit = 'W';\n        this.lineChartLabels = ['0:00', '1:00', '2:00', '3:00', '4:00', '5:00',\n          '6:00', '7:00', '8:00', '9:00', '10:00', '11:00', '12:00', '13:00', '14:00', '15:00',\n          '16:00', '17:00', '18:00', '19:00', '20:00', '21:00', '22:00', '23:00', '24:00'];\n        break;\n      case ChartType.MONTHLY:\n        this.unit = 'kWt';\n        this.total = this.total/1000;\n        this.avg = this.avg/1000;\n        this.lineChartLabels = ['1', '2', '3', '4', '5', '6',\n          '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22'\n          , '23', '24', '25', '26', '27', '28', '29', '30'];\n        break;\n      case ChartType.YEARLY:{\n        this.unit = 'kWt';\n        this.lineChartLabels = ['January', 'February', 'March', 'April', 'May', 'June',\n          'July', 'August', 'September', 'October', 'Novermber', 'December'];\n        break;\n      }\n\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/line-chart/line-chart.ts"],"sourceRoot":""}